[build-system]
requires = [
    "setuptools>=62.1",
    "setuptools_scm[toml]>=6.2",
    "wheel",
    "extension-helpers",
    "numpy>=1.25,<2",
]
build-backend = "setuptools.build_meta"

[project]
name = "pyampp"
description = "Automatic Model Suff"
readme = "README.rst"
requires-python = ">=3.10"
license = { file = "licenses/LICENSE.rst", content-type = "text/plain" }
dependencies = ["sunpy[all]",
    "numpy>=1.25,<2",
    "cython",
    "ipympl",
    "ipywidgets",
    "matplotlib",
    "pyvista",
    "pyvistaqt",
    "pyqt5",
    "QtPy",
    "qtrangeslider"]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-doctestplus",
    "pytest-cov"
]
docs = [
    "sphinx",
    "sphinx-automodapi",
    "tomli; python_version <\"3.11\"",
]



[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]

[tool.setuptools_scm]
write_to = "pyampp/_version.py"

[tool.pytest.ini_options]
testpaths = [
    "pyampp",
    "docs",
]
doctest_plus = "enabled"
text_file_format = "rst"
addopts = "--doctest-rst"

[tool.coverage.run]
omit = [
    "pyampp/__init*",
    "pyampp/conftest.py",
    "pyampp/*setup_package*",
    "pyampp/tests/*",
    "pyampp/*/tests/*",
    "pyampp/extern/*",
    "pyampp/version*",
    "*/pyampp/__init*",
    "*/pyampp/conftest.py",
    "*/pyampp/*setup_package*",
    "*/pyampp/tests/*",
    "*/pyampp/*/tests/*",
    "*/pyampp/extern/*",
    "*/pyampp/version*",
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about packages we have installed
    "except ImportError",
    # Don't complain if tests don't hit assertions
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about script hooks
    "def main(.*):",
    # Ignore branches that don't pertain to this version of Python
    "pragma: py{ignore_python_version}",
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
]
